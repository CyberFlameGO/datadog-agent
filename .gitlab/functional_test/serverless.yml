.check_size_common:
  stage: functional_test
  script:
    - export CURRENT_SIZE_IN_BYTES=$(ls -l $BINARY_NAME | awk '{print $5}')
    - echo "Current extension size $CURRENT_SIZE_IN_BYTES bytes"
    - export DELTA=$(($CURRENT_SIZE_IN_BYTES-$BASELINE_SIZE_IN_BYTES))
    - if [[ $DELTA -gt 0 ]]; then echo "Extension binary size is too big for $BINARY_NAME, please investigate/reach the serverless slack channel" && exit 1; else exit 0; fi

serverless_cold_start_performance-deb_x64:
  stage: functional_test
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/deb_x64:$DATADOG_AGENT_BUILDIMAGES
  tags: ["runner:docker"]
  needs: ["linux_x64_go_deps"]
  before_script:
    - !reference [.retrieve_linux_go_deps]
  script:
    - cd cmd/serverless && go build -mod=mod -a -v -tags serverless
    - mkdir -p /tmp/serverless-ci
    - cp serverless /tmp/serverless-ci/datadog-agent
    - cp ../../test/integration/serverless_perf/* /tmp/serverless-ci
    - cd /tmp/serverless-ci # Docker does not like syslinks, that's why it's easier to build the image in /tmp
    - docker build -t datadogci/lambda-extension .
    - ./compute.sh

check_size_x64:
  needs:
    - job: build_serverless-deb_x64
  variables:
    BINARY_NAME: datadog-agent-x64
    # this baseline is the current binary size + 3%
    BASELINE_SIZE_IN_BYTES: 30609317
  extends: .check_size_common

check_size_arm64:
  needs:
    - job: build_serverless-deb_arm64
  variables:
    BINARY_NAME: datadog-agent-arm64
    # this baseline is the current binary size + 3%
    BASELINE_SIZE_IN_BYTES: 30609317
  extends: .check_size_common
